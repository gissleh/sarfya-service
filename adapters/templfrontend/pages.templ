package templfrontend

import (
    "github.com/gissleh/sarfya"
    "github.com/gissleh/sarfya/sarfyaservice"
    "strconv"
)

templ searchPage(filter string, err string, groups []sarfyaservice.FilterMatchGroup) {
    @searchBox(filter)
    if err != "" {
        <div class="error">{err}</div>
    }
	for i, group := range groups {
	    if len(groups) > 1 {
	        <div class={"group-word-list idx-"+strconv.Itoa(i)}>
	            for _, entry := range group.Entries {
	                <div class="word">
	                    <span class="word">{entry.Word}</span>
	                    <span class="pos"> ({entry.OriginalPoS  })</span>
	                </div>
	            }
	        </div>
	    }
	    for _, match := range group.Examples {
	        @example(match, ctx.Value(langCtxKey).(string))
	    }
	}
}

templ indexPage() {
    <h1>Sarfya</h1>
    <h6>Säsrung a fwew sìkenongit</h6>

    @searchBox("")
    if ctx.Value(demoCtxKey) != nil {
        @example(*ctx.Value(demoCtxKey).(*sarfya.FilterMatch), ctx.Value(langCtxKey).(string))
    }

    @queryExample("uvan si", "Search for the verb.")
    @queryExample("sìk:1796", "Filter by word-ID to not get tsìk or tìk.")
    @queryExample("*:adp.", "Search for adpositions.")
    @queryExample("*:<äp eyk>", "Search for causative reflexive infixes.")
    @queryExample("*:<äng>|<ei>|<ui>", "Search for affect infixes.")
    @queryExample("*:<ats>", "Search for inferential infix.")
    @queryExample("*:vin. >+< !*:part.|adj.", "Search all intransitive verbs that surrounds a non-partilce/adjective.")
    @queryExample("*:n.|pn. ++ *:adj.:-a-", "Search all nouns and pronouns with adjectives on both sides.")
    @queryExample("*:adj.:-a +> *:n.|pn. +> *:adj.:a-", "Find all sequences that are adj-a noun/pronoun a-adj.")
    @queryExample("*:n.|pn. +> *:adj.:a- +> a:part.", "Attributive particle after attributed verb.")
    @queryExample("fpìl +>> san", "Search all cases where fpìl comes before san.")
    @queryExample("zun && zel", "Find all conterfactual conditionals.")
    @queryExample("flag:proverb", "See all proverbs.")
    @queryExample("\"kx\"", "Search all words that contain 'kx'.")
    @queryExample("\"endless\":en", "Search \"endless\" in the English translation.")
    @queryExample("\" art \":en", "Search \"art\" in the English translation without matching \"part\" or \"heart\".")
    @queryExample("fwa || fula || futa || fura || furia", "The f-words.")
    @queryExample("tsawa || tsala || tsata:sbd. || tsara || tsaria", "The other f-words.")
    @queryExample("teynga:sbd. || teyngla:sbd. || teyngta:sbd. || teyngra:sbd. || teyngria:sbd. || teyngä:sbd.", "The answer-to contractions.")
}